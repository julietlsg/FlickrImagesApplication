//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImageDataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class APIImagesEntities : DbContext
    {
        public APIImagesEntities()
            : base("name=APIImagesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Error> Errors { get; set; }
        public virtual DbSet<tblImageDetail> tblImageDetails { get; set; }
    
        [DbFunction("APIImagesEntities", "UDF_GetErrorDetails")]
        public virtual IQueryable<UDF_GetErrorDetails_Result> UDF_GetErrorDetails(string errorCode, string objectName)
        {
            var errorCodeParameter = errorCode != null ?
                new ObjectParameter("ErrorCode", errorCode) :
                new ObjectParameter("ErrorCode", typeof(string));
    
            var objectNameParameter = objectName != null ?
                new ObjectParameter("ObjectName", objectName) :
                new ObjectParameter("ObjectName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_GetErrorDetails_Result>("[APIImagesEntities].[UDF_GetErrorDetails](@ErrorCode, @ObjectName)", errorCodeParameter, objectNameParameter);
        }
    
        public virtual ObjectResult<string> usp_GetImageById(string imageLocation)
        {
            var imageLocationParameter = imageLocation != null ?
                new ObjectParameter("ImageLocation", imageLocation) :
                new ObjectParameter("ImageLocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetImageById", imageLocationParameter);
        }
    
        public virtual int usp_UploadImage(string imgID, string imgName, string imageData, string imageDescription, Nullable<System.DateTime> imageDate, string imageLocation)
        {
            var imgIDParameter = imgID != null ?
                new ObjectParameter("ImgID", imgID) :
                new ObjectParameter("ImgID", typeof(string));
    
            var imgNameParameter = imgName != null ?
                new ObjectParameter("ImgName", imgName) :
                new ObjectParameter("ImgName", typeof(string));
    
            var imageDataParameter = imageData != null ?
                new ObjectParameter("ImageData", imageData) :
                new ObjectParameter("ImageData", typeof(string));
    
            var imageDescriptionParameter = imageDescription != null ?
                new ObjectParameter("ImageDescription", imageDescription) :
                new ObjectParameter("ImageDescription", typeof(string));
    
            var imageDateParameter = imageDate.HasValue ?
                new ObjectParameter("ImageDate", imageDate) :
                new ObjectParameter("ImageDate", typeof(System.DateTime));
    
            var imageLocationParameter = imageLocation != null ?
                new ObjectParameter("ImageLocation", imageLocation) :
                new ObjectParameter("ImageLocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UploadImage", imgIDParameter, imgNameParameter, imageDataParameter, imageDescriptionParameter, imageDateParameter, imageLocationParameter);
        }
    }
}
